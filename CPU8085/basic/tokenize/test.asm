.module 	tokenizetest
.title 		Tests tokenize Module

.include	'tokenize.def'
.include	'..\common\common.def'

STACK	==	0xFFFF			;SYSTEM STACK

.area	BOOT	(ABS)

.org 	0x0000
	
RST0:
	DI
	LXI	SP,STACK		;INITALIZE STACK
	JMP 	START


;*********************************************************
;* MAIN PROGRAM
;*********************************************************
.area 	_CODE

START:

	MVI	A,8			;SET INTERRUPT MASK
	SIM
	EI				;ENABLE INTERRUPTS

;	JMP	TEST_FINDTOKENID
;	JMP	TEST_FINDTOKENSTR
	JMP	TEST_TOKENIZE1

TEST_FINDTOKENID:
	LXI	H,TESTSTR1
	CALL	TOK_FINDTOKENID		;TOK = K_POWER, LEN = 1

	LXI	H,TESTSTR2
	CALL	TOK_FINDTOKENID		;TOK = K_ADD, LEN = 1

	LXI	H,TESTSTR3
	CALL	TOK_FINDTOKENID		;TOK = K_NOTEQUAL, LEN = 2

	LXI	H,TESTSTR4
	CALL	TOK_FINDTOKENID		;TOK = K_ABS, LEN = 3

	LXI	H,TESTSTR5
	CALL	TOK_FINDTOKENID		;TOK = K_RIGHT, LEN = 6

	LXI	H,TESTSTR6
	CALL	TOK_FINDTOKENID		;TOK = K_PRINT, LEN = 1

	LXI	H,TESTSTR7
	CALL	TOK_FINDTOKENID		;TOK = K_NONE (0), LEN = ?

	LXI	H,TESTSTR8
	CALL	TOK_FINDTOKENID		;TOK = K_NONE (0), LEN = ?


TEST_FINDTOKENSTR:

	MVI	A, K_POWER
	CALL	TOK_FINDTOKENSTR	;[HL] = "^"

	MVI	A, K_PRINT
	CALL	TOK_FINDTOKENSTR	;[HL] = "PRINT"

	MVI	A, 0xFF
	CALL	TOK_FINDTOKENSTR	;HL = 0

TEST_TOKENIZE1:
	LXI	H,TESTSTR100
	CALL	TOK_TOKENIZE1

	LXI	H,TESTSTR101
	CALL	TOK_TOKENIZE1

;	LXI	H,TESTSTR102
;	CALL	TOK_TOKENIZE1

	LXI	H,TESTSTR103
	CALL	TOK_TOKENIZE1

	LXI	H,TESTSTR104
	CALL	TOK_TOKENIZE1

	LXI	H,TESTSTR105
	CALL	TOK_TOKENIZE1

	LXI	H,TESTSTR106
	CALL	TOK_TOKENIZE1

LOOP:
	JMP	LOOP


TESTSTR1:	.asciz	'^'
TESTSTR2:	.asciz	'+'
TESTSTR3:	.asciz	'<>'

TESTSTR4:	.asciz	'ABS'
TESTSTR5:	.asciz	'RIGHT$'
TESTSTR6:	.asciz	'?'

TESTSTR7:	.asciz	'!'
TESTSTR8:	.asciz	'IN'

.area	DATA	(REL,CON)
TESTSTR100:	.asciz	'X = ABS(10)'
TESTSTR101:	.asciz	'PRINT "PRINTS A STRING", A$'

TESTSTR102:	.asciz	'?"NOEND'

TESTSTR103:	.asciz	'X=10: REM COMMENT'

TESTSTR104:	.asciz	'X=-1'
TESTSTR105:	.asciz	'?A,-X'
TESTSTR106:	.asciz	'?2-3'

