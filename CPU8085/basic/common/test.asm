.module 	commontest
.title 		Tests Common Module

.include	'common.def'

STACK	==	0xFFFF			;SYSTEM STACK

.area	BOOT	(ABS)

.org 	0x0000
	
RST0:
	DI
	LXI	SP,STACK		;INITALIZE STACK
	JMP 	START


;*********************************************************
;* MAIN PROGRAM
;*********************************************************
.area 	_CODE

START:

	MVI	A,8			;SET INTERRUPT MASK
	SIM
	EI				;ENABLE INTERRUPTS

;	JMP	TEST_NAME2TAG
;	JMP	TEST_MEMSET
;	JMP	TEST_MEMCPY
	JMP	TEST_MEMCPYF

;*********************************************************
;* TEST C_ISDIGIT FUNCTION
TEST_ISDIGIT:
	MVI	A,'0		; CF = 1
	CALL	C_ISDIGIT
	
	MVI	A,'9		; CF = 1
	CALL	C_ISDIGIT
	
	MVI	A,'0 - 1	; CF = 0
	CALL	C_ISDIGIT
	
	MVI	A,'9 + 1	; CF = 0
	CALL 	C_ISDIGIT

;*********************************************************
;* TEST C_ISALPHA FUNCTION
TEST_ISALPHA:
	MVI	A,'A
	CALL	C_ISALPHA		; CF = 1
	
	MVI	A,'Z
	CALL	C_ISALPHA		; CF = 1
	
	MVI	A,'a
	CALL	C_ISALPHA		; CF = 1
	
	MVI	A,'z
	CALL 	C_ISALPHA		; CF = 1

	MVI	A,'A - 1
	CALL	C_ISALPHA		; CF = 0
	
	MVI	A,'Z + 1
	CALL	C_ISALPHA		; CF = 0
	
	MVI	A,'a - 1
	CALL	C_ISALPHA		; CF = 0
	
	MVI	A,'z + 1
	CALL 	C_ISALPHA		; CF = 0

;*********************************************************
;* TEST C_TAG2NAME FUNCTION
TEST_TAG2NAME:
	LXI	H,TEMPSTR		; OUTPUT TO TEMPSTR
	MVI	B,'A + 128		; A (STRING) +
	MVI	C,'B			; B
	CALL	C_TAG2NAME		; RESULT: AB$

	LXI	H,TEMPSTR		; OUTPUT TO TEMPSTR
	MVI	B,'F  + 128		; F (STRING) 
	MVI	C,0			; 
	CALL	C_TAG2NAME		; RESULT: F$


	LXI	H,TEMPSTR		; OUTPUT TO TEMPSTR
	MVI	B,'Z 			; Z 
	MVI	C,0			; B
	CALL	C_TAG2NAME		; RESULT: Z

TEST_NAME2TAG:

	LXI	H,TESTSTR1		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = A

;	LXI	H,TESTSTR2		; INPUT TEST STRING
;	CALL	C_NAME2TAG		; RESULT: BC = FAIL

;	LXI	H,TESTSTR3		; INPUT TEST STRING
;	CALL	C_NAME2TAG		; RESULT: BC = FAIL


	LXI	H,TESTSTR4		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = B

	LXI	H,TESTSTR5		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = B$

	LXI	H,TESTSTR6		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = B$
	

	LXI	H,TESTSTR7		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AA

	LXI	H,TESTSTR8		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AA$

	LXI	H,TESTSTR9		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = A3$

	LXI	H,TESTSTR10		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = A

	LXI	H,TESTSTR11		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AB

	LXI	H,TESTSTR12		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AB

	LXI	H,TESTSTR13		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = A2


	LXI	H,TESTSTR14		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AB$

	LXI	H,TESTSTR15		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = AB$

	LXI	H,TESTSTR16		; INPUT TEST STRING
	CALL	C_NAME2TAG		; RESULT: BC = A2$

TEST_MEMSET:

TEST_MEMCPY:

TEST_MEMCPYF:
	MVI	C,6			; LENGTH
	LXI	D,TESTCPYF1		; SOURCE PTR
	LXI	H,TESTCPYF1+3		; DEST PTR
	CALL	C_MEMCPYF

LOOP:
	JMP	LOOP


TESTSTR1:	.asciz	'a'
TESTSTR2:	.asciz	'$'
TESTSTR3:	.asciz	'9'

TESTSTR4:	.asciz	'b '
TESTSTR5:	.asciz	'b$'
TESTSTR6:	.asciz	'b$b'

TESTSTR7:	.asciz	'aa '
TESTSTR8:	.asciz	'aa$'
TESTSTR9:	.asciz	'a3$'
TESTSTR10:	.asciz	'a!$'

TESTSTR11:	.asciz	'abcdef '
TESTSTR12:	.asciz	'abc123 '
TESTSTR13:	.asciz	'a23456 '

TESTSTR14:	.asciz	'abcdef$ '
TESTSTR15:	.asciz	'abc123$ '
TESTSTR16:	.asciz	'a23456$ '



;*********************************************************
;* RAM VARIABLES
;*********************************************************

.area	DATA	(REL,CON)

TEMPSTR:	.ds	32			;TEMP STRING

TESTCPYF1:	.ascii	'ABCDEF    '